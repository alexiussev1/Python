# –†–µ–∫—É—Ä—Å–∏—è

# –° —Ä–µ–∫—É—Ä—Å–∏–µ–π –í—ã –∑–Ω–∞–∫–æ–º—ã —Å C#, –≤ Python –æ–Ω–∞ –Ω–∏—á–µ–º –Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, –¥–∞–≤–∞–π —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º
# —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ n. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ n - –ø–µ—Ä–≤—ã—Ö
# —á–ª–µ–Ω–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –§–∏–±–æ–Ω–∞—á—á–∏.
# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –§–∏–±–æ–Ω–∞—á—á–∏, —ç—Ç–æ —Ç–∞–∫–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –≤
# # –∫–æ—Ç–æ—Ä–æ–π –∫–∞–∂–¥–æ–µ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º—É 2-—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö

# üí° –ü—Ä–∏ –æ–ø–∏—Å–∞–Ω–∏–∏ —Ä–µ–∫—É—Ä—Å–∏–∏ –≤–∞–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å, –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–¥–æ
# –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –≤—ã–∑—ã–≤–∞—Ç—å —Å–∞–º—É —Å–µ–±—è. –ü–æ-–¥—Ä—É–≥–æ–º—É –≥–æ–≤–æ—Ä—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
# —É–∫–∞–∑–∞—Ç—å –±–∞–∑–∏—Å —Ä–µ–∫—É—Ä—Å–∏–∏

import os
os.system("cls")


def fibanachi(n):
    if n in [1,2]:  #–ø–æ–º–Ω–∏—Ç–µ, –æ–±—è—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É—Å—Ç–∞–≤—å—Ç–µ —É—Å–ª–æ–≤–∏–µ –ø–æ –≤—ã—Ö–æ–¥—É –∏–∑ —Ä–µ–∫—Ä—Å–∏–∏ –≤ –Ω–∞—á–∞–ª–µ
        return 1
    return fibanachi(n-1) + fibanachi(n-2)

list_1=[]
for i in range(1,10):
    list_1.append(fibanachi(i))
print(list_1)